# Simple signing CA

[ default ]
ca                      = signing-ca             # CA name
dir                     = $ENV::CADIR           # Top dir
base_url                = http://pki.deleteonerror.com/    # CA base URL
aia_url                 = $base_url/$ca.cer     # CA certificate URL
crl_url                 = $base_url/$ca.crl     # CRL distribution point
name_opt                = multiline,-esc_msb,utf8 # Display UTF-8 characters

[ req ]
default_bits            = 2048                  # RSA key size
encrypt_key             = yes                   # Protect private key
default_md              = sha512                # MD to use
utf8                    = yes                   # Input is UTF-8
string_mask             = utf8only              # Emit UTF-8 strings
prompt                  = no                    # Don't prompt for DN
distinguished_name      = ca_dn                 # DN section
req_extensions          = ca_reqext             # Desired extensions


[ ca_dn ]
countryName                     = "Country code (2 characters)"
countryName_default             = "DE"
countryName_min                 = 2
countryName_max                 = 2
0.organizationName              = "Organization or companyname"
0.organizationName_default      = "Delete on Error"
organizationalUnitName          = "Unit"
organizationalUnitName_default  = "Delete on Error Certificate Authority"
commonName                      = "The name of the client certificate owner or server certificate hostname (FQN)"
commonName_default              = "Delete on Error Signing CA"
commonName_max                  = 64

[ ca_reqext ]
keyUsage		= critical,keyCertSign,cRLSign
basicConstraints	= critical,CA:true,pathlen:0
subjectKeyIdentifier	= hash

[ ca ]
default_ca		= signing_ca

[ signing_ca ]
new_certs_dir           = $dir/newcerts           # Certificate archive
database                = $dir/db/$ca.db          # Index file
private_key             = $dir/private/$ca.key    # CA private key
certificate             = $dir/$ca.crt            # The CA cert
serial                  = $dir/db/$ca.crt.srl     # Serial number file
crlnumber               = $dir/db/$ca.crl.srl     # CRL number file
RANDFILE                = $dir/private/.rand
default_days            = 731                     # How long to certify for
default_crl_days        = 30                      # How long before next CRL
default_md              = sha512                  # MD to use
preserve                = no                      # Keep passed DN ordering
policy                  = match_pol               # Default naming policy
unique_subject          = no                      # Require unique subject
email_in_dn             = no                      # Add email to cert DN
name_opt                = $name_opt               # Subject DN display options
cert_opt                = ca_default              # Certificate display options
copy_extensions         = copy                    # Copy extensions from CSR
x509_extensions         = client_ext             # Default cert extensions
crl_extensions          = crl_ext                 # CRL extensions

[ match_pol ]
countryName		= optional
stateOrProvinceName	= optional
localityName		= optional
organizationName	= match
organizationalUnitName	= optional
commonName		= supplied

[ any_pol ]
domainComponent		= optional
countryName		= optional
stateOrProvinceName	= optional
localityName		= optional
organizationName	= optional
organizationalUnitName	= optional
commonName		= optional
emailAddress		= optional

# Extensions

[ client_ext ]
keyUsage		= critical,digitalSignature,keyEncipherment,dataEncipherment
basicConstraints	= CA:false
extendedKeyUsage	= emailProtection,clientAuth
subjectKeyIdentifier	= hash
authorityKeyIdentifier	= keyid:always
authorityInfoAccess	= @issuer_info

[ server_ext ]
keyUsage		= critical,digitalSignature,keyEncipherment,keyAgreement
basicConstraints	= CA:false
extendedKeyUsage	= serverAuth,clientAuth
authorityKeyIdentifier	= keyid:always
authorityInfoAccess	= @issuer_info

[ code_ext ]
keyUsage		= critical,digitalSignature
basicConstraints	= CA:false
extendedKeyUsage	= critical,codeSigning
subjectKeyIdentifier	= hash
authorityKeyIdentifier	= keyid:always
authorityInfoAccess	= @issuer_info
crlDistributionPoints	= @crl_info

[ crl_ext ]
authorityKeyIdentifier	= keyid:always
authorityInfoAccess	= @issuer_info

[ issuer_info ]
caIssuers;URI.0         = $aia_url

[ crl_info ]
URI.0                   = $crl_url