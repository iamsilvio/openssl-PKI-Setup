# Simple Root CA
# Tested with OpenSSL 1.1.0f

[ default ]
ca                      = root-ca               # CA name
dir                     = $ENV::CADIR           # Top dir
base_url                = http://pki.deleteonerror.com    # CA base URL
aia_url                 = $base_url/$ca.crt     # CA certificate URL
crl_url                 = $base_url/$ca.crl     # CRL distribution point
name_opt                = multiline,-esc_msb,utf8 # Display UTF-8 characters

[ req ]
default_bits            = 4096                  # RSA key size
encrypt_key             = yes                   # Protect private key
default_md              = sha512                # MD to use
utf8                    = yes                   # Input is UTF-8
string_mask             = utf8only              # Emit UTF-8 strings
prompt                  = no                    # Don't prompt for DN
distinguished_name      = ca_dn                 # DN section
req_extensions          = ca_reqext             # Desired extensions


[ ca_dn ]
countryName                     = DE
organizationName                = Delete on Error
organizationalUnitName          = Delete on Error Certificate Authority
commonName                      = Delete on Error Root CA

[ ca_reqext ]
keyUsage                = critical,keyCertSign,cRLSign
basicConstraints        = critical,CA:true
subjectKeyIdentifier    = hash

[ ca ]
default_ca              = root_ca               # The default CA section

[ root_ca ]
new_certs_dir           = $dir/newcerts           # Certificate archive
database                = $dir/db/$ca.db          # Index file
private_key             = $dir/private/$ca.key    # CA private key
certificate             = $dir/$ca.crt            # The CA cert
serial                  = $dir/db/$ca.crt.srl     # Serial number file
crlnumber               = $dir/db/$ca.crl.srl     # CRL number file
RANDFILE                = $dir/private/.rand
default_days            = 731                     # How long to certify for
default_crl_days        = 30                      # How long before next CRL
default_md              = sha512                  # MD to use
preserve                = no                      # Keep passed DN ordering
policy                  = match_pol               # Default naming policy
unique_subject          = no                      # Require unique subject
email_in_dn             = no                      # Add email to cert DN
name_opt                = $name_opt               # Subject DN display options
cert_opt                = ca_default              # Certificate display options
copy_extensions         = none                    # Copy extensions from CSR
x509_extensions         = signing_ca_ext          # Default cert extensions
crl_extensions          = crl_ext                 # CRL extensions

[ match_pol ]
countryName             = match                 # Must match 'DE'
stateOrProvinceName     = optional              # Included if present
localityName            = optional              # Included if present
organizationName        = match                 # Must match 'Delete on Error'
organizationalUnitName  = optional              # Included if present
commonName              = supplied              # Must be present

[ any_pol ]
domainComponent         = optional
countryName             = optional
stateOrProvinceName     = optional
localityName            = optional
organizationName        = optional
organizationalUnitName  = optional
commonName              = optional
emailAddress            = optional

# Extensions

[ root_ca_ext ]
# Extensions for a typical CA (`man x509v3_config`)
keyUsage                = critical,keyCertSign,cRLSign
basicConstraints        = critical,CA:true
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid:always

[ signing_ca_ext ]
# Extensions for a typical intermediate CA (`man x509v3_config`).
keyUsage                = critical,keyCertSign,cRLSign
basicConstraints        = critical,CA:true,pathlen:0
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid:always
authorityInfoAccess     = @issuer_info
crlDistributionPoints   = @crl_info

[ crl_ext ]
# Extension for CRLs (`man x509v3_config`).
authorityKeyIdentifier  = keyid:always
authorityInfoAccess     = @issuer_info

[ ocsp ]
# Extension for OCSP signing certificates (`man ocsp`).
keyUsage                = critical, digitalSignature
basicConstraints        = CA:false
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid:always
authorityInfoAccess     = @issuer_info
extendedKeyUsage        = critical, OCSPSigning

[ issuer_info ]
caIssuers;URI.0         = $aia_url

[ crl_info ]
URI.0                   = $crl_url

